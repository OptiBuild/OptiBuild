{"ast":null,"code":"var _jsxFileName = \"E:\\\\Desktop\\\\6001\\\\project\\\\OptiBuild\\\\optibuild\\\\src\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Survey.css';\nimport ProgressBar from './ProgressBar.js';\nimport { useNavigate } from 'react-router-dom';\nimport $ from 'jquery';\nimport logo from './images/Logo.jpg';\nimport button from './images/button.gif';\nimport sta from './images/static.png';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Survey() {\n  _s();\n  const logoRef = useRef(null);\n  const buttonRef = useRef(null);\n  const surveycontainerRef = useRef(null);\n  const covercontainerRef = useRef(null);\n  const colorRef = useRef(null);\n  const [next, setNext] = useState(false);\n  const handleButtonClick = () => {\n    // Use jQuery to animate the logo element\n    // $('.logo').css('position', 'fixed')\n    $(logoRef.current).animate({\n      width: '200px',\n      height: '200px',\n      // Shrink width\n      top: '-300px',\n      // Move to top\n      left: '-650px' // Move to left\n    }, 300, function () {\n      // navigate('/survey');\n    });\n    $(buttonRef.current).animate({\n      top: '-100px',\n      left: '790px'\n    }, 300, function () {\n      $(surveycontainerRef.current).animate({\n        opacity: '100%'\n      }, 500);\n      $('.survey-container').css('z-index', '20');\n    });\n    if (!next) {\n      setNext(true);\n    } else {\n      nextQuestion();\n    }\n  };\n  useEffect(() => {\n    // Set the body background color to a specific blue using hexadecimal\n    document.body.style.backgroundColor = '#34495E'; // Example blue color\n\n    // Cleanup function to reset the background color when the component unmounts\n    return () => {\n      document.body.style.backgroundColor = '';\n      if (logoRef.current) {\n        $(logoRef.current).stop(); // Stop any jQuery animation on unmount\n      }\n      ;\n      if (buttonRef.current) {\n        $(buttonRef.current).stop();\n      }\n    };\n  }, []);\n  const questions = [{\n    questionText: 'What is your budget?',\n    type: 'open-ended'\n  }, {\n    questionText: 'Do you like to leave your software open?',\n    options: ['Yes', 'No'],\n    type: 'multiple-choice-single'\n  }, {\n    questionText: 'What specific programs will you be using?',\n    options: ['Adobe Premiere Pro', 'Adobe After Effects', 'Adobe Photoshop', 'General work'],\n    type: 'multiple-choice-multiple'\n  }, {\n    questionText: 'Will you be playing games?',\n    options: ['Yes', 'No'],\n    type: 'multiple-choice-single'\n  }, {\n    questionText: 'How much storage do you think you will need?',\n    options: ['250 GB - 500 GB', '500GB - 1TB', '1TB - 2TB', '2TB - 4TB', '4TB+'],\n    type: 'multiple-choice-single'\n  }, {\n    questionText: 'Where do you plan to place your PC?',\n    options: ['Limited space', 'Unlimited space'],\n    type: 'multiple-choice-single'\n  }, {\n    questionText: 'Do you plan to upgrade your PC in the future?',\n    options: ['Yes', 'No'],\n    type: 'multiple-choice-single'\n  }, {\n    questionText: 'How many tabs do you like to keep open at once?',\n    options: ['0-15', '15-30', '30-45'],\n    type: 'multiple-choice-single'\n  }];\n  const followqs = [{\n    questionText: 'What specific games do you play?',\n    type: 'open-ended'\n  }, {\n    questionText: 'Do you keep an average of more than 6 programs open?',\n    options: ['Yes', 'No'],\n    type: 'multiple-choice-single'\n  }];\n  const navigate = useNavigate();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState(Array(questions.length).fill(''));\n  const progress = currentQuestionIndex / (questions.length - 1) * 100;\n  const [activeOption, setActiveOption] = useState(null);\n  const handleOptionClick = option => {\n    console.log(option);\n    if (questions[currentQuestionIndex].type === 'multiple-choice-multiple') {\n      let updatedAnswers = [...answers];\n      let currentAnswers = updatedAnswers[currentQuestionIndex];\n      if (typeof currentAnswers === 'string') currentAnswers = [];\n      const optionIndex = currentAnswers.indexOf(option);\n      if (optionIndex > -1) {\n        // Remove the option\n        currentAnswers.splice(optionIndex, 1);\n      } else {\n        // Add the option\n        currentAnswers.push(option);\n      }\n      updatedAnswers[currentQuestionIndex] = currentAnswers;\n      setAnswers(updatedAnswers);\n    } else {\n      const updatedAnswers = [...answers];\n      updatedAnswers[currentQuestionIndex] = option;\n      setAnswers(updatedAnswers);\n      // if ((currentQuestionIndex == 5 && option == 'Yes') || (currentQuestionIndex == 2 && option == 'Yes')){\n\n      // }\n      // Proceed to the next question or submit if it's the last question\n      // handleColorChange();\n      setActiveOption(option);\n      // nextQuestion();\n    }\n  };\n  const [inputError, setInputError] = useState(\"\");\n  const handleOpenEndedChange = e => {\n    const value = e.target.value;\n    // Check if the input value is numeric (integer) or an empty string\n    if (/^\\d*$/.test(value)) {\n      // If numeric, update the answer and clear any error message\n      const updatedAnswers = [...answers];\n      updatedAnswers[currentQuestionIndex] = value;\n      setAnswers(updatedAnswers);\n      setInputError(\"\"); // Clear any error message\n    } else {\n      // If not numeric, set an error message but still allow the input for user correction\n      setInputError(\"Please enter a valid number.\");\n    }\n    const updatedAnswers = [...answers];\n    updatedAnswers[currentQuestionIndex] = e.target.value;\n    setAnswers(updatedAnswers);\n  };\n  const nextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n      setActiveOption(null);\n    }\n    // } else {\n    //   handleSubmit(); // Call submit function when reaching the end of the questions\n    // }\n  };\n  const handleSubmit = async () => {\n    // Final submission logic, e.g., send answers to a backend or show a summary\n    console.log('Survey completed. Answers:', answers);\n    // Add this function inside your Survey component\n    // try {\n    //     const response = await axios.post('http://optibuild/api/questions', {\n    //         answers: answers,\n    //         // Include any other data you need to send\n    //     });\n    //     console.log('Survey submitted successfully:', response.data);\n    //     navigate('/submission', { state: { data: response.data } }); // Navigate to a submission success page\n    // } catch (error) {\n    //     console.error('Failed to submit survey:', error);\n    //     // Handle errors, perhaps show a message to the user\n    // }\n    const url = 'https://sincere-accurately-foal.ngrok-free.app/questions';\n    axios.post(url, answers).then(response => {\n      // Handle response\n      console.log(response.data);\n    }).catch(error => {\n      // Handle error\n      console.error(\"There was an error!\", error);\n    });\n    navigate('/submission');\n    // navigate('/submission', { state: { data: response.data } });   \n  };\n  const renderQuestionInput = e => {\n    console.log(currentQuestionIndex);\n    if (e == 0) {\n      const question = questions[currentQuestionIndex];\n      if (question.type === 'multiple-choice-single') {\n        return question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `multiple-button ${activeOption === option ? 'active' : ''}`,\n            onClick: () => handleOptionClick(option),\n            children: option\n          }, option, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this));\n      } else if (question.type === 'multiple-choice-multiple') {\n        return question.options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            style: {\n              marginRight: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"checkbox\",\n              type: \"checkbox\",\n              id: option,\n              name: option\n              // checked={answers[currentQuestionIndex].includes(option)}\n              ,\n              onChange: () => handleOptionClick(option)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: option,\n              className: \"label\",\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 21\n            }, this)]\n          }, option, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this));\n      } else if (question.type === 'open-ended') {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"open-input\",\n            type: \"text\",\n            value: answers[currentQuestionIndex],\n            onChange: handleOpenEndedChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), inputError && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: inputError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 32\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }, this);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: covercontainerRef,\n      className: \"cover-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          ref: logoRef,\n          className: \"logo\",\n          src: logo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: buttonRef,\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"animates\",\n            className: \"gif\",\n            src: button\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"static\",\n            className: \"gif\",\n            src: sta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: handleButtonClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: surveycontainerRef,\n      id: \"survey\",\n      className: \"survey-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: questions[currentQuestionIndex].questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-render\",\n          children: renderQuestionInput(0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), currentQuestionIndex < questions.length - 1 ?\n        /*#__PURE__*/\n        // questions[currentQuestionIndex].type !== 'multiple-choice-single' ? \n        //     <button onClick={nextQuestion}>Skip</button>\n        //     :\n        //     null\n        _jsxDEV(\"button\", {\n          className: \"skipbutton\",\n          onClick: nextQuestion,\n          children: \"Skip\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Let's Build\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 9\n  }, this);\n}\n_s(Survey, \"jru+4z5kT+wh/l1/gmu4ce5Hoqk=\", false, function () {\n  return [useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","useRef","ProgressBar","useNavigate","$","logo","button","sta","axios","jsxDEV","_jsxDEV","Survey","_s","logoRef","buttonRef","surveycontainerRef","covercontainerRef","colorRef","next","setNext","handleButtonClick","current","animate","width","height","top","left","opacity","css","nextQuestion","document","body","style","backgroundColor","stop","questions","questionText","type","options","followqs","navigate","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","Array","length","fill","progress","activeOption","setActiveOption","handleOptionClick","option","console","log","updatedAnswers","currentAnswers","optionIndex","indexOf","splice","push","inputError","setInputError","handleOpenEndedChange","e","value","target","test","handleSubmit","url","post","then","response","data","catch","error","renderQuestionInput","question","map","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginRight","id","name","onChange","htmlFor","color","ref","src","_c","$RefreshReg$"],"sources":["E:/Desktop/6001/project/OptiBuild/optibuild/src/Survey.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Survey.css';\r\nimport ProgressBar from './ProgressBar.js'; \r\nimport { useNavigate } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport logo from './images/Logo.jpg';\r\nimport button from './images/button.gif';\r\nimport sta from './images/static.png';\r\nimport axios from 'axios';\r\n\r\nfunction Survey() {\r\n\r\n    const logoRef = useRef(null);\r\n    const buttonRef = useRef(null);\r\n    const surveycontainerRef = useRef(null);\r\n    const covercontainerRef = useRef(null);\r\n    const colorRef = useRef(null);\r\n    const [next, setNext] = useState(false);\r\n    const handleButtonClick = () => {\r\n        // Use jQuery to animate the logo element\r\n        // $('.logo').css('position', 'fixed')\r\n        $(logoRef.current).animate({\r\n        width: '200px',\r\n        height: '200px', // Shrink width\r\n        top: '-300px',   // Move to top\r\n        left: '-650px',  // Move to left\r\n        }, 300, function(){\r\n            // navigate('/survey');\r\n        }); \r\n\r\n        $(buttonRef.current).animate({\r\n            top: '-100px',\r\n            left: '790px',\r\n        }, 300, function(){\r\n            $(surveycontainerRef.current).animate({\r\n                opacity: '100%',\r\n            }, 500);\r\n            $('.survey-container').css('z-index', '20');\r\n        });\r\n        if (!next) {\r\n            setNext(true);\r\n        } else {\r\n            nextQuestion();\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Set the body background color to a specific blue using hexadecimal\r\n        document.body.style.backgroundColor = '#34495E'; // Example blue color\r\n        \r\n        // Cleanup function to reset the background color when the component unmounts\r\n        return () => {\r\n            document.body.style.backgroundColor = '';\r\n            if (logoRef.current) {\r\n                $(logoRef.current).stop(); // Stop any jQuery animation on unmount\r\n            };\r\n            if (buttonRef.current) {\r\n                $(buttonRef.current).stop();\r\n            }\r\n        };\r\n    }, []);\r\n    const questions = [\r\n        {\r\n            questionText: 'What is your budget?',\r\n            type: 'open-ended'\r\n        },\r\n        {\r\n            questionText: 'Do you like to leave your software open?',\r\n            options: ['Yes', 'No'],\r\n            type: 'multiple-choice-single'\r\n        },\r\n        { \r\n            questionText: 'What specific programs will you be using?', \r\n            options: ['Adobe Premiere Pro', 'Adobe After Effects', 'Adobe Photoshop', 'General work'], \r\n            type: 'multiple-choice-multiple' \r\n        },\r\n        { \r\n            questionText: 'Will you be playing games?', \r\n            options: ['Yes', 'No'], \r\n            type: 'multiple-choice-single' \r\n        },\r\n        { \r\n            questionText: 'How much storage do you think you will need?', \r\n            options: ['250 GB - 500 GB', '500GB - 1TB', '1TB - 2TB', '2TB - 4TB', '4TB+'],\r\n            type: 'multiple-choice-single' \r\n        },\r\n        {\r\n            questionText: 'Where do you plan to place your PC?',\r\n            options: ['Limited space', 'Unlimited space'],\r\n            type: 'multiple-choice-single'\r\n        },\r\n        {\r\n            questionText: 'Do you plan to upgrade your PC in the future?',\r\n            options: ['Yes', 'No'],\r\n            type: 'multiple-choice-single'\r\n        },\r\n        {\r\n            questionText: 'How many tabs do you like to keep open at once?',\r\n            options: ['0-15', '15-30', '30-45'],\r\n            type: 'multiple-choice-single'\r\n        },\r\n    ];\r\n\r\n\r\n\r\n    const followqs = [\r\n        {\r\n            questionText: 'What specific games do you play?',\r\n            type: 'open-ended'\r\n        },\r\n        {\r\n            questionText: 'Do you keep an average of more than 6 programs open?',\r\n            options: ['Yes', 'No'],\r\n            type: 'multiple-choice-single'\r\n        }\r\n    ];\r\n    const navigate = useNavigate();\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [answers, setAnswers] = useState(Array(questions.length).fill(''));\r\n    const progress = (currentQuestionIndex / (questions.length - 1)) * 100;\r\n    const [activeOption, setActiveOption] = useState(null);\r\n    const handleOptionClick = (option) => {\r\n        console.log(option);\r\n        if (questions[currentQuestionIndex].type === 'multiple-choice-multiple') {\r\n        let updatedAnswers = [...answers];\r\n        let currentAnswers = updatedAnswers[currentQuestionIndex];\r\n        if (typeof currentAnswers === 'string') currentAnswers = [];\r\n        \r\n        const optionIndex = currentAnswers.indexOf(option);\r\n        if (optionIndex > -1) {\r\n            // Remove the option\r\n            currentAnswers.splice(optionIndex, 1);\r\n        } else {\r\n            // Add the option\r\n            currentAnswers.push(option);\r\n        }\r\n        updatedAnswers[currentQuestionIndex] = currentAnswers;\r\n        setAnswers(updatedAnswers);\r\n        } else {\r\n\r\n            const updatedAnswers = [...answers];\r\n            updatedAnswers[currentQuestionIndex] = option;\r\n            setAnswers(updatedAnswers);\r\n            // if ((currentQuestionIndex == 5 && option == 'Yes') || (currentQuestionIndex == 2 && option == 'Yes')){\r\n\r\n            // }\r\n            // Proceed to the next question or submit if it's the last question\r\n            // handleColorChange();\r\n            setActiveOption(option);\r\n            // nextQuestion();\r\n        }\r\n    };\r\n    const [inputError, setInputError] = useState(\"\");\r\n    const handleOpenEndedChange = (e) => {\r\n        const value = e.target.value;\r\n        // Check if the input value is numeric (integer) or an empty string\r\n        if (/^\\d*$/.test(value)) {\r\n            // If numeric, update the answer and clear any error message\r\n            const updatedAnswers = [...answers];\r\n            updatedAnswers[currentQuestionIndex] = value;\r\n            setAnswers(updatedAnswers);\r\n            setInputError(\"\"); // Clear any error message\r\n        } else {\r\n            // If not numeric, set an error message but still allow the input for user correction\r\n            setInputError(\"Please enter a valid number.\");\r\n        }\r\n        const updatedAnswers = [...answers];\r\n        updatedAnswers[currentQuestionIndex] = e.target.value;\r\n        setAnswers(updatedAnswers);\r\n    };\r\n\r\n    const nextQuestion = () => {\r\n        if (currentQuestionIndex < questions.length - 1) {\r\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n        setActiveOption(null);\r\n        }\r\n        // } else {\r\n        //   handleSubmit(); // Call submit function when reaching the end of the questions\r\n        // }\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        // Final submission logic, e.g., send answers to a backend or show a summary\r\n        console.log('Survey completed. Answers:', answers);\r\n        // Add this function inside your Survey component\r\n        // try {\r\n        //     const response = await axios.post('http://optibuild/api/questions', {\r\n        //         answers: answers,\r\n        //         // Include any other data you need to send\r\n        //     });\r\n        //     console.log('Survey submitted successfully:', response.data);\r\n        //     navigate('/submission', { state: { data: response.data } }); // Navigate to a submission success page\r\n        // } catch (error) {\r\n        //     console.error('Failed to submit survey:', error);\r\n        //     // Handle errors, perhaps show a message to the user\r\n        // }\r\n        const url = 'https://sincere-accurately-foal.ngrok-free.app/questions';\r\n        axios.post(url, answers)\r\n            .then(response => {\r\n                // Handle response\r\n                console.log(response.data);\r\n            })\r\n            .catch(error => {\r\n                // Handle error\r\n                console.error(\"There was an error!\", error);\r\n            });\r\n        navigate('/submission')\r\n        // navigate('/submission', { state: { data: response.data } });   \r\n    };\r\n\r\n    const renderQuestionInput = (e) => {\r\n        console.log(currentQuestionIndex);\r\n        if(e == 0){\r\n            const question = questions[currentQuestionIndex];\r\n            if (question.type === 'multiple-choice-single') {\r\n            return question.options.map((option) => (\r\n                <div>\r\n                    <button className={`multiple-button ${activeOption === option ? 'active' : ''}`} key={option} onClick={() => handleOptionClick(option)}>\r\n                    {option}\r\n                    </button>\r\n                </div>\r\n            ));\r\n            } else if (question.type === 'multiple-choice-multiple') {\r\n            return question.options.map((option) => (\r\n                <div className=\"options-container\">\r\n                    <div key={option} className='option' style={{marginRight: '10px' }}>\r\n                    <input \r\n                        className='checkbox'\r\n                        type='checkbox'\r\n                        id={option}\r\n                        name={option}\r\n                        // checked={answers[currentQuestionIndex].includes(option)}\r\n                        onChange={() => handleOptionClick(option)}\r\n                    />\r\n                    <label htmlFor={option} className='label'>{option}</label>\r\n                    </div>\r\n                </div>\r\n            ));\r\n            } else if (question.type === 'open-ended') {\r\n            return (\r\n                <div>\r\n                <input className='open-input'\r\n                type='text'\r\n                value={answers[currentQuestionIndex]}\r\n                onChange={handleOpenEndedChange}\r\n                />\r\n                {inputError && <div style={{color: 'red'}}>{inputError}</div>} {/* Display error message */}\r\n                </div>\r\n            );\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='container'>\r\n            <ProgressBar progress={progress} />\r\n            <div ref={covercontainerRef} className='cover-container'>\r\n                <div className='image-container'>\r\n                    <img ref={logoRef}  className='logo' src={logo}></img>\r\n                    <div ref={buttonRef} className='button-container'>\r\n                        <img id='animates' className='gif' src={button}></img>\r\n                        <img id='static' className='gif' src={sta}></img>\r\n                        <button className='btn' onClick={handleButtonClick} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div ref={surveycontainerRef} id='survey' className='survey-container'>\r\n                <div className='question-container'>\r\n                    <h2>{questions[currentQuestionIndex].questionText}</h2>\r\n                    <div className='question-render'>{renderQuestionInput(0)}</div>\r\n                    {currentQuestionIndex < questions.length - 1 ? (\r\n                        // questions[currentQuestionIndex].type !== 'multiple-choice-single' ? \r\n                        //     <button onClick={nextQuestion}>Skip</button>\r\n                        //     :\r\n                        //     null\r\n                            <button className='skipbutton' onClick={nextQuestion}>Skip</button>\r\n                        ) : (\r\n                        <button onClick={handleSubmit}>Let's Build</button>\r\n            )}\r\n                    {/* {questions[currentQuestionIndex].type === 'open-ended' && (\r\n                    <button onClick={nextQuestion}>Next (for open-ended)</button>\r\n                    )} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}